<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: test | 蕲春人的博客]]></title>
  <link href="http://qichunren.github.com/blog/categories/test/atom.xml" rel="self"/>
  <link href="http://qichunren.github.com/"/>
  <updated>2012-06-03T22:52:48+08:00</updated>
  <id>http://qichunren.github.com/</id>
  <author>
    <name><![CDATA[qichunren]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用ffaker来产生随机数据]]></title>
    <link href="http://qichunren.github.com/blog/2012/01/19/use-ffaker/"/>
    <updated>2012-01-19T22:01:00+08:00</updated>
    <id>http://qichunren.github.com/blog/2012/01/19/use-ffaker</id>
    <content type="html"><![CDATA[<p><a href="https://github.com/EmmanuelOga/ffaker">ffaker</a>是一个用来产生随机name\email之类的工具，可以用在开发时先产生一些有意义的随机数据，将数据写在db/seeds.rb中，这样你就不用每次急燥地添加一些asasddfdsf这样的数据。一个好的工作开发环境，可以让心情舒畅，效率加倍。</p>

<p>在db/seeds.rb中，如果要产生100个用户名，直接这样做：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;ffaker&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt; 100.times do</span>
</span><span class='line'><span class="sr">   user = User.new</span>
</span><span class='line'><span class="sr">   user.name = Faker::Name.name =&gt; &quot;David Cao&quot;</span>
</span><span class='line'><span class="sr">   user.email = Faker::Internet.email =&gt; &quot;qichunren@cqror.com&quot;</span>
</span><span class='line'><span class="sr">   user.save</span>
</span><span class='line'><span class="sr"> end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我前一段时间，提交了<a href="https://github.com/EmmanuelOga/ffaker/pull/9">一点代码</a> ，可以产生天朝的姓名：
<div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;ffaker&#39;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;Faker::NameCN.first_name # =&gt; 鑫洋</span>
</span><span class='line'><span class="sr">Faker::NameCN.last_name # =&gt; 禹</span>
</span><span class='line'><span class="sr">Faker::NameCN.name # =&gt; 俊伶漫</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>ffaker目前最新的版本是1.2，可以产生中文的姓名。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Benchmark用法]]></title>
    <link href="http://qichunren.github.com/blog/2008/10/09/use-benchmark/"/>
    <updated>2008-10-09T12:01:00+08:00</updated>
    <id>http://qichunren.github.com/blog/2008/10/09/use-benchmark</id>
    <content type="html"><![CDATA[<p><a href="http://rubybenchmark.com/">Benchmark</a>可以用来测试某个函数或者任何代码的执行时间。</p>

<p>用法很简单：
<div>
  <pre>
    <code class='ruby'>require 'benchmark'
n = 1500
Benchmark.bmbm do |x|&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x.report(&quot;+ method&quot;) { n.times {string1 = &quot;ddd&quot; + &quot;11111&quot; + &quot;Helodd&quot; } }
x.report(&quot;&amp;lt;&amp;lt; method&quot;) { n.times {string2 = &quot;ddd&quot; &amp;lt;&amp;lt; &quot;11111&quot; &amp;lt;&amp;lt; &quot;Helodd&quot;} }  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;end</code>
  </pre>
</div>
</p>

<p>结果如下：
<div>
  <pre>
    <code class='text'>usermatoMacBook-Pro:test qichunren$ ruby test.rb
Rehearsal ---------------------------------------------
+ method    0.000000   0.000000   0.000000 (  0.001722)
&amp;lt;&amp;lt; method   0.000000   0.000000   0.000000 (  0.001073)
------------------------------------ total: 0.000000sec&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            user     system      total        real
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;method    0.000000   0.000000   0.000000 (  0.001040)
&amp;lt;&amp;lt; method   0.000000   0.000000   0.000000 (  0.000719)</code>
  </pre>
</div>
</li>
</ul>


<h3>参考资料</h3>

<ul>
<li><a href="http://ruby-doc.org/stdlib/libdoc/benchmark/rdoc/index.html">Benchmark Rdoc</a></li>
<li><a href="http://www.kuqin.com/rubycndocument/man/addlib/benchmark.html">Ruby参考手册</a></li>
<li><a href="https://github.com/acangiano/ruby-benchmark-suite">ruby-benchmark-suite</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
